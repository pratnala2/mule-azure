<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd ">
    <apikit:config name="book-api-service-v1-config" api="book-api-service-v1.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="book-api-service-v1-main">
        <http:listener config-ref="HTTP_Listener_config" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="book-api-service-v1-config" />
    </flow>
    <flow name="book-api-service-v1-console">
        <http:listener path="/console/*" config-ref="HTTP_Listener_config">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="book-api-service-v1-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\bookInfo:book-api-service-v1-config">
        <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  status: "Books are not found in direcotry"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\books:application\xml:book-api-service-v1-config">
		<set-variable value="${mule.env}" doc:name="Set Variable" doc:id="7969645c-8856-42e7-822e-e3ddc978af58" variableName="env"/>
		<choice doc:name="Choice" doc:id="32c30073-c2fc-4cfc-a0b4-5da0f5545990" >
			<when expression='#[vars.env == "dev"]'>
				<ee:transform doc:name="transform" doc:id="528f6699-d172-49a5-a3d1-b3451fdde2f3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
books: {(payload.catalog.*book  filter $.price > 15 map {
   ($.@id):{
    bookAuthor : $.author,
    genre : $.genre,
    bookPrice : $.price}
})}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="8ff8b526-5eb8-400b-b48f-e5ba302b5dcf" message="#[payload]"/>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="6fc2c0e7-c462-4013-a35f-805763acf8aa" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
---
books: {(payload.catalog.*book map {
   ($.@id):{
    bookAuthor : $.author,
    bookPrice : $.price}
})}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
    </flow>
</mule>
